{% import "@SyliusAdmin/Common/Macro/money.html.twig" as money %}

{% macro productName(item) %}
    {{ ((item.variant.product.brand ? item.variant.product.brand.value ~ ' ' : '') ~ item.productName) | trim }}
{% endmacro %}

{% macro variantName(item) %}
    {% if item.variant.optionValues | length > 0 %}
        {% for optionValue in item.variant.optionValues %}
            {{ optionValue.value }}{% if not loop.last %}, {% endif %}
        {% endfor %}
    {% else %}
        {{ item.variantName }}
    {% endif %}
{% endmacro %}

{% set orderPromotionAdjustment = constant('Sylius\\Component\\Core\\Model\\AdjustmentInterface::ORDER_PROMOTION_ADJUSTMENT') %}
{% set unitPromotionAdjustment = constant('Sylius\\Component\\Core\\Model\\AdjustmentInterface::ORDER_UNIT_PROMOTION_ADJUSTMENT') %}
{% set shippingAdjustment = constant('Sylius\\Component\\Core\\Model\\AdjustmentInterface::SHIPPING_ADJUSTMENT') %}
{% set taxAdjustment = constant('Sylius\\Component\\Core\\Model\\AdjustmentInterface::TAX_ADJUSTMENT') %}
{% set orderItemDiscountAdjustment = constant('Sylius\\AdminOrderCreationPlugin\\Form\\Type\\AdjustmentType::ORDER_ITEM_DISCOUNT_ADJUSTMENT') %}

{% set variant = item.variant %}
{% set product = variant.product %}

{% set unitDiscount = item.units.first ? item.units.first.adjustmentsTotal(unitPromotionAdjustment) + item.getAdjustmentsTotalRecursively(orderItemDiscountAdjustment) / item.quantity : 0 %}
{% set discountedUnitPrice = item.fullDiscountedUnitPrice + item.getAdjustmentsTotalRecursively(orderItemDiscountAdjustment) / item.quantity %}
{% set subtotal = item.quantity * (item.unitPrice + (item.units.first ? item.units.first.adjustmentsTotal(unitPromotionAdjustment) : 0) + (item.units.first ? item.units.first.adjustmentsTotal(orderPromotionAdjustment)) : 0) + item.getAdjustmentsTotalRecursively(orderItemDiscountAdjustment) %}

{% set taxIncluded = sylius_admin_order_unit_tax_included(item) %}
{% set taxExcluded = sylius_admin_order_unit_tax_excluded(item) %}

<tr>
    <td class="single line">
        <div class="ui header">
            {% if product.imagesByType('thumbnail') is not empty %}
                {% set path = product.imagesByType('thumbnail').first.path|imagine_filter(filter|default('sylius_admin_product_thumbnail')) %}
            {% elseif product.images.first %}
                {% set path = product.images.first.path|imagine_filter(filter|default('sylius_admin_product_thumbnail')) %}
            {% else %}
                {% set path = asset('assets/admin/img/50x50.png') %}
            {% endif %}

            <img src="{{ path }}" alt="" class="ui bordered image sylius-grid-image" />
            <div class="content">
                {% set productName = _self.productName(item) %}
                <div class="sylius-product-name" title="{{ productName }}">{{ productName }}</div>
                {% set variantName = _self.variantName(item) %}
                <span class="sub header sylius-product-variant-code" title="{{ variantName }}">
                    {{ variantName }}
                </span>
            </div>
        </div>
    </td>
    <td class="right aligned unit-price">
        {{ money.format(item.unitPrice, order.currencyCode) }}
    </td>
    <td class="right aligned unit-discount">
        {{ money.format(unitDiscount, order.currencyCode) }}
    </td>
    <td class="right aligned unit-order-discount">
        <span style="font-style: italic;">{{ money.format(item.units.first.adjustmentsTotal(orderPromotionAdjustment), order.currencyCode) }}</span>
    </td>
    <td class="right aligned discounted-unit-price">
        {{ money.format(discountedUnitPrice, order.currencyCode) }}
    </td>
    <td class="right aligned quantity">
        {{ item.quantity }}
    </td>
    <td class="right aligned subtotal">
        {{ money.format(subtotal, order.currencyCode) }}
    </td>
    <td class="right aligned tax">
        <div class="tax-excluded">{{ money.format(taxExcluded, order.currencyCode) }}</div>
        <div class="tax-disabled">
            <div class="tax-included"> {{ money.format(taxIncluded, order.currencyCode) }}
            </div>
            <small>({{ 'sylius.ui.included_in_price'|trans }})</small>
        </div>
    </td>
    <td class="right aligned total">
        {{ money.format(item.total, order.currencyCode) }}
    </td>
</tr>
