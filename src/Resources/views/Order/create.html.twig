{% extends '@SyliusAdmin/shared/layout/base.html.twig' %}

{% block title %}{{ 'sylius.ui.new_order'|trans }} {{ parent() }}{% endblock %}

{% form_theme form '@SyliusAdminOrderCreationPlugin/Order/itemCollectionTheme.html.twig' %}

{% if order is defined %}
    {% set customer_id = order.customer.id %}
    {% set channel_code = order.channel.code %}
{% else %}
    {% set customer_id = app.request.attributes.get('customerId') %}
    {% set channel_code = app.request.attributes.get('channelCode') %}
{% endif %}

{% block body %}
    {% hook 'add_admin.custom' %}
    <div class="page-wrapper">
        <div class="row mb-3">
            <div class="col">
                <h1 class="h3">
                    <i class="bi bi-plus-circle me-2"></i>{{ 'sylius.ui.new_order'|trans }}
                </h1>
                {% include '@SyliusAdminOrderCreationPlugin/Order/Create/_breadcrumb.html.twig' %}
            </div>
        </div>
        {% include '@SyliusAdminOrderCreationPlugin/Order/Create/_form.html.twig' with {
            'action': path('sylius_admin_order_creation_order_preview', {'customerId': customer_id, 'channelCode': channel_code})
        } %}
    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('bundles/fosjsrouting/js/router.min.js') }}"></script>
    <script src="{{ path('fos_js_routing_js', { callback: 'fos.Router.setData' }) }}"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const targetNode = document.querySelector('#sylius_admin_order_creation_new_order_payments');
            const observer = new MutationObserver(mutations => {
                mutations.forEach(mutation => {
                    if (mutation.addedNodes.length > 0) {
                        document.querySelector('#sylius_admin_order_creation_new_order_payments [data-form-collection="add"]').style.display = 'none';
                    }
                    if (mutation.removedNodes.length > 0) {
                        document.querySelector('#sylius_admin_order_creation_new_order_payments [data-form-collection="add"]').style.display = '';
                    }
                });
            });

            observer.observe(targetNode, {
                childList: true,
                subtree: true,
            });

            document.querySelector('#sylius_admin_order_creation_new_order_shipments [data-form-collection="add"]').addEventListener('click', function(e) {
                if (!canShippingMethodBeProvided()) {
                    e.stopPropagation();
                    return;
                }
                loadAvailableShippingMethods();
            });

            document.querySelector('#shipmentsAndPaymentsTab').addEventListener('click', function(e) {
                const shipmentsAndPayments = document.querySelector('#shipmentsAndPayments');
                if (canShippingMethodBeProvided()) {
                    shipmentsAndPayments.querySelector('.invalid-data-message').style.display = 'none';
                } else {
                    shipmentsAndPayments.querySelector('.invalid-data-message').style.display = 'block';
                }

                if (shipmentsAndPayments.querySelectorAll('select').length !== 0) {
                    loadAvailableShippingMethods();
                }
            });

            document.querySelectorAll('[data-form-collection="item"] .sylius-autocomplete.dropdown').forEach(element => {
                element.querySelector('input[type="hidden"]').value && (element.textContent = element.querySelector('input[type="hidden"]').value);
            });

            function loadAvailableShippingMethods() {
                if (!canShippingMethodBeProvided()) {
                    return;
                }

                let form = document.querySelector('form');
                form.classList.add('loading');

                Routing.setScheme(location.protocol.replace(':', ''));

                fetch(Routing.generate(
                    'sylius_admin_order_creation_ajax_provide_available_shipping_methods',
                    { 'customerId': '{{ customer_id }}', 'channelCode': '{{ channel_code }}', 'shipmentNumber': '0' },
                    true
                ), {
                    method: "GET",
                    headers: {
                        "Accept": "application/json"
                    },
                    body: new URLSearchParams(new FormData(form))
                })
                    .then(response => response.json())
                    .then(data => {
                        let lastShipment = document.querySelector('#sylius_admin_order_creation_new_order_shipments [data-form-collection="list"] [data-form-collection="item"]:last-child');
                        let selectBody = '';

                        for (const key in data) {
                            selectBody += `<option value="${key}">${data[key]}</option>`;
                        }

                        lastShipment.querySelector('select').innerHTML = selectBody;
                        form.classList.remove('loading');
                    })
                    .catch(error => console.error('Error:', error));
            }

            function canShippingMethodBeProvided() {
                return document.querySelectorAll('#sylius_admin_order_creation_new_order_items [data-form-collection="item"]').length > 0 &&
                    document.querySelector('#sylius_admin_order_creation_new_order_shippingAddress_countryCode').value !== '' &&
                    document.querySelector('#sylius_admin_order_creation_new_order_localeCode').value !== '';
            }
        });
    </script>
{% endblock %}
