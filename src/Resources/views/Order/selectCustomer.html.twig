{% extends '@SyliusAdmin/shared/layout/base.html.twig' %}

{% form_theme selectCustomerForm '@SyliusAdminOrderCreationPlugin/Order/selectCustomerTheme.html.twig' %}
{% form_theme createCustomerForm '@SyliusAdmin/shared/form_theme.html.twig' %}

{% block pre_content %}
    <h2 class="ui header">
        <i class="circular cart plus icon"></i>
        <div class="content">
            {{ 'sylius.ui.new_order'|trans }}
            <div class="sub header">{{ 'sylius_admin_order_creation.ui.customer_selection'|trans }}</div>
        </div>
    </h2>
{% endblock %}

{% block body %}
    {% hook 'add_admin.custom' %}
    <div class="page-wrapper">

        <div class="text-center mb-5">
            {{ form_start(selectCustomerForm, {'method': 'GET'}) }}
            <div class="mb-3">
                {{ form_row(selectCustomerForm.customer) }}
            </div>
            <div class="mb-3">
                {{ form_row(selectCustomerForm.channel, {'attr': {'class': 'form-select'}}) }}
            </div>
            <button class="btn btn-primary" id="order_select_customer_submit">{{ 'sylius.ui.next'|trans }}</button>
            {{ form_end(selectCustomerForm) }}
        </div>

        <div class="text-center my-4">
            <div class="d-inline-block px-3 bg-light text-muted rounded">{{ 'sylius.ui.or'|trans }}</div>
        </div>

        <div class="text-center">
            {{ form_start(createCustomerForm, {'method': 'GET'}) }}
            <div class="mb-3">
                <input type="email"
                       class="form-control"
                       name="{{ createCustomerForm.customerEmail.vars.full_name }}"
                       value="{{ createCustomerForm.customerEmail.vars.value }}"
                       placeholder="{{ 'sylius_admin_order_creation.ui.new_customer_email'|trans }}">
            </div>
            <div class="mb-3">
                {{ form_row(createCustomerForm.channel, {'attr': {'class': 'form-select'}}) }}
            </div>
            <button class="btn btn-success" id="order_create_new_customer_submit">
                <i class="bi bi-plus-lg me-1"></i>{{ 'sylius_admin_order_creation.ui.create_new'|trans }}
            </button>
            {{ form_end(createCustomerForm) }}
        </div>

    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script src="{{ asset('bundles/fosjsrouting/js/router.min.js') }}"></script>
    <script src="{{ path('fos_js_routing_js', { callback: 'fos.Router.setData' }) }}"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            function addErrorMessage(element, message) {
                let errorDiv = document.createElement("div");
                errorDiv.className = "ui red pointing label sylius-validation-error";
                errorDiv.textContent = message;
                element.parentNode.insertBefore(errorDiv, element.nextSibling);
            }

            document.getElementById("order_select_customer_submit").addEventListener("click", function(e) {
                e.preventDefault();

                let form = this.closest("form");
                let customerInput = form.querySelector('[name*="[customer]"]');
                let customerId = customerInput.value;
                let channelCode = form.querySelector('select[name*="[channel]"]').value;

                if (customerId.length) {
                    form.setAttribute("action", Routing.generate(
                        "sylius_admin_order_creation_order_create",
                        {
                            'customerId': customerId,
                            'channelCode': channelCode
                        },
                        true
                    ));
                    form.submit();
                } else {
                    addErrorMessage(customerInput.parentNode, "{{ 'sylius_admin_order_creation.ui.no_customer_selected'|trans }}");
                }
            });

            document.getElementById("order_create_new_customer_submit").addEventListener("click", function(e) {
                e.preventDefault();

                let form = this.closest("form");
                let customerEmailInput = form.querySelector('[name*="[customerEmail]"]');
                let customerEmail = customerEmailInput.value;
                let channelCode = form.querySelector('[name*="[channel]"]').value;

                if (customerEmail) {
                    form.setAttribute("action", Routing.generate(
                        "sylius_admin_order_creation_customer_create",
                        {
                            'customerEmail': customerEmail,
                            'channelCode': channelCode
                        },
                        true
                    ));
                    form.submit();
                    return;
                }

                if (!form.querySelector(".sylius-validation-error")) {
                    addErrorMessage(customerEmailInput.parentNode, "{{ 'sylius_admin_order_creation.ui.customer_email'|trans }}");
                }
            });
        });
    </script>
{% endblock %}
